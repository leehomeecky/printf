.TH _printf 1 "April 20, 2023" "version 1.2" "_printf man page"
.SH NAME
_printf - format and print data
.SH SYNOPSIS
#include <unistd.h>
#include <stdarg.h>
#include <stdlib.h>
#include "main.h"

int _printf(const char *format, ...);

.SH DESCRIPTION
_printf is a function that produces output according to a format. It writes the output under the control of a format string that specifies how subsequent arguments (or arguments accessed via the variable-length argument facilities of stdarg(3)) are converted for output.

The function executes according to the following options:

.I
.SS FORMAT SPECIFIERS:
.RS

A character that specifies the type of conversion to be applied. The format specifiers and their meanings are:

.IP %c
Prints a single character. The int argument is converted to an unsigned char, and the resulting character is written.

.IP %s
Prints a string. The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte ('\0').

.IP %d, %i
Prints a signed integer in decimal notation. The int argument is converted to signed decimal notation.

.IP %u
Prints an unsigned integer in decimal notation.

.IP %o
Prints an unsigned integer in octal notation.

.IP %x, %X
Prints an unsigned integer in hexadecimal notation. The letters 'abcdef' are used for %x conversions; the letters 'ABCDEF' are used for %X conversions.

.IP %p
Prints a pointer address in hexadecimal notation.

.IP %%
Prints a literal percent sign.

.I
.SS MODIFIERS:
.RS

A character that specifies the format of the argument to be printed. The modifiers and their meanings are:

.IP hh
Treats the corresponding argument as a signed or unsigned char.

.IP h
Treats the corresponding argument as a signed or unsigned short int.

.IP l
Treats the corresponding argument as a signed or unsigned long int.

.IP ll
Treats the corresponding argument as a signed or unsigned long long int.

.IP +
Prints a sign (+ or -) for signed numbers.

.IP ' '
A space is inserted before positive numbers.

.IP #
Used with o, x, and X conversions, the value is preceded with 0, 0x, or 0X respectively for values different than zero.

.IP 0
Left-pads the number with zeros instead of spaces.

.I
.SS CUSTOM CONVERSION SPECIFIERS:
.RS

.IP %b
Prints an unsigned integer in binary notation.

.IP %r
Prints a string in reverse.

.IP %R
Prints a string in ROT13 encryption.

.SH RETURN VALUE
Upon successful return, the _printf function returns the number of characters printed (excluding the null byte used to end output to strings).

If an output error is encountered, a negative value (-1) is returned.

.SH EXAMPLES:
.RS
.SS --------------
.I
.SS Character[%c]:
.RS
.SS --------------
.SS Input: _printf("This is a char: [%c]", 'C');
.SS Output: This is a char: [C]
.SS --------------
.I
.SS Literal String:
.RS
.SS --------------
.SS Input: _printf("Let's try to _printf a simple sentence");
.SS Output: Let's try to _printf a simple sentence
.SS --------------
.I
.SS Integers[%i]:
.RS
.
